MODULE(m1);
/*
check types of procedure parameters with call by reference (IDENT)

 happy day scenarios as wells as
 fails with 
   type conflicts

 treat type FIXED (with different length).
 INV conflicts may appear
 treat REF types
*/
PROBLEM;

SPC so DATION OUT ALPHIC DIM(*,80) FORWARD GLOBAL(other);
SPC irupt INTERRUPT GLOBAL(other);
DCL b BOLT;
DCL sem SEMA;
   DCL f7 FIXED(7);
   DCL f32 FIXED(32);
   DCL hFloat FLOAT(52);
   DCL bit2 BIT(2);
   DCL dur DURATION;
   DCL clk CLOCK;
   DCL ch CHAR(2);

q0: PROC (f FIXED(31) IDENT );
  f = f + 1;
END;

t0: TASK;
   DCL f15 FIXED(15);
   TYPE F15 FIXED(15);
   DCL tf15 F15;
   DCL f31 FIXED(31);
   DCL if31 INV FIXED(31) INIT(42);
   DCL rif31 REF INV FIXED(31);
   DCL irif31 INV REF INV FIXED(31) INIT(if31);
   DCL str STRUCT[a FIXED(31), b FIXED(15)];

   DCL ia(3) INV FIXED INIT(1,2);
   DCL ria REF () INV FIXED;
   DCL iria INV REF () INV FIXED INIT(ia);

   DCL c100 CHAR(100);
   DCL rc REF CHAR();
   
   CALL q0(15);           
/*$        ^
error: type mismatch: cannot pass constant of type FIXED(4) as FIXED(31) by IDENT
*/

   CALL q0(f15);          
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as FIXED(31) by IDENT
*/

   CALL q0(tf15);          
/*$        ^
error: type mismatch: cannot pass object of type F15 {aka: FIXED(15)} as FIXED(31) by IDENT
*/

   CALL q0(str.a);        
   CALL q0(str.b);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as FIXED(31) by IDENT
*/

   CALL q0(if31);         
/*$        ^
error: type mismatch: cannot pass object of type INV FIXED(31) as FIXED(31) by IDENT -- would break INV
*/

   CALL q0(rif31);        
/*$        ^
error: type mismatch: cannot pass object of type REF INV FIXED(31) as FIXED(31) by IDENT
*/

   CALL q0(irif31);       
/*$        ^
error: type mismatch: cannot pass object of type INV REF INV FIXED(31) as FIXED(31) by IDENT
*/

   CALL q0(f31+1);        
/*$        ^
error: type mismatch: cannot pass expression of type FIXED(31) as FIXED(31) by IDENT
*/

   CALL q0('a');
/*$        ^
error: type mismatch: cannot pass constant of type CHAR(1) as FIXED(31) by IDENT
*/

   CALL q0(c100);
/*$        ^
error: type mismatch: cannot pass object of type CHAR(100) as FIXED(31) by IDENT
*/

   CALL q0(rc);
/*$        ^
error: type mismatch: cannot pass object of type REF CHAR() as FIXED(31) by IDENT
*/


   CALL q0(ria); ! REF () INV FIXED;
/*$        ^
error: type mismatch: cannot pass object of type REF () INV FIXED(31) as FIXED(31) by IDENT
*/

   CALL q0(iria); ! INV REF () INV FIXED INIT(ia);
/*$        ^
error: type mismatch: cannot pass object of type INV REF () INV FIXED(31) as FIXED(31) by IDENT
*/

END;


q1: PROC (f INV FIXED(31) IDENT );
  !f = f + 1;
END;

t1: TASK;
   DCL f15 FIXED(15);
   TYPE F15 FIXED(15);
   DCL tf15 F15;
   DCL f31 FIXED(31);
   DCL if31 INV FIXED(31) INIT(42);
   DCL rif31 REF INV FIXED(31);
   DCL irif31 INV REF INV FIXED(31) INIT(if31);
   DCL str STRUCT[a FIXED(31), b FIXED(15)];

   DCL ia(3) INV FIXED INIT(1,2);
   DCL ria REF () INV FIXED;
   DCL iria INV REF () INV FIXED INIT(ia);

   DCL c100 CHAR(100);
   DCL rc REF CHAR();
   
   CALL q1(15);           
/*$        ^
error: type mismatch: cannot pass constant of type FIXED(4) as INV FIXED(31) by IDENT
*/

   CALL q1(f15);          
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as INV FIXED(31) by IDENT
*/

   CALL q1(tf15);          
/*$        ^
error: type mismatch: cannot pass object of type F15 {aka: FIXED(15)} as INV FIXED(31) by IDENT
*/

   CALL q1(str.a);        
   CALL q1(str.b);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as INV FIXED(31) by IDENT
*/

   CALL q1(if31);          ! ok

   CALL q1(rif31);  
/*$        ^
error: type mismatch: cannot pass object of type REF INV FIXED(31) as INV FIXED(31) by IDENT
*/

   CALL q1(irif31); 
/*$        ^
error: type mismatch: cannot pass object of type INV REF INV FIXED(31) as INV FIXED(31) by IDENT
*/

   CALL q1(f31+1);        
/*$        ^
error: type mismatch: cannot pass expression of type FIXED(31) as INV FIXED(31) by IDENT
*/

   CALL q1('a');
/*$        ^
error: type mismatch: cannot pass constant of type CHAR(1) as INV FIXED(31) by IDENT
*/

   CALL q1(c100);
/*$        ^
error: type mismatch: cannot pass object of type CHAR(100) as INV FIXED(31) by IDENT
*/

   CALL q1(rc);
/*$        ^
error: type mismatch: cannot pass object of type REF CHAR() as INV FIXED(31) by IDENT
*/


   CALL q1(ria); ! REF () INV FIXED;
/*$        ^
error: type mismatch: cannot pass object of type REF () INV FIXED(31) as INV FIXED(31) by IDENT
*/

   CALL q1(iria); ! INV REF () INV FIXED INIT(ia);
/*$        ^
error: type mismatch: cannot pass object of type INV REF () INV FIXED(31) as INV FIXED(31) by IDENT
*/
END;

q2: PROC (f REF INV FIXED(31) IDENT );
  !f = f + 1;
END;

t2: TASK;
   DCL f15 FIXED(15);
   TYPE F15 FIXED(15);
   DCL tf15 F15;
   DCL f31 FIXED(31);
   DCL if31 INV FIXED(31) INIT(42);
   DCL rif31 REF INV FIXED(31);
   DCL irif31 INV REF INV FIXED(31) INIT(if31);
   DCL str STRUCT[a FIXED(31), b FIXED(15)];

   DCL ia(3) INV FIXED INIT(1,2);
   DCL ria REF () INV FIXED;
   DCL iria INV REF () INV FIXED INIT(ia);

   DCL c100 CHAR(100);
   DCL rc REF CHAR();
   
   CALL q2(15);           
/*$        ^
error: type mismatch: cannot pass constant of type FIXED(4) as REF INV FIXED(31) by IDENT
*/

   CALL q2(f15);          
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as REF INV FIXED(31) by IDENT
*/

   CALL q2(tf15);          
/*$        ^
error: type mismatch: cannot pass object of type F15 {aka: FIXED(15)} as REF INV FIXED(31) by IDENT
*/

   CALL q2(str.a);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(31) as REF INV FIXED(31) by IDENT
*/

   CALL q2(str.b);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as REF INV FIXED(31) by IDENT
*/

   CALL q2(if31);          
/*$        ^
error: type mismatch: cannot pass object of type INV FIXED(31) as REF INV FIXED(31) by IDENT
*/

   CALL q2(rif31); ! ok 

   CALL q2(irif31); 
/*$        ^
error: type mismatch: cannot pass object of type INV REF INV FIXED(31) as REF INV FIXED(31) by IDENT -- would break INV
*/

   CALL q2(f31+1);        
/*$        ^
error: type mismatch: cannot pass expression of type FIXED(31) as REF INV FIXED(31) by IDENT
*/

   CALL q2('a');
/*$        ^
error: type mismatch: cannot pass constant of type CHAR(1) as REF INV FIXED(31) by IDENT
*/

   CALL q2(c100);
/*$        ^
error: type mismatch: cannot pass object of type CHAR(100) as REF INV FIXED(31) by IDENT
*/

   CALL q2(rc);
/*$        ^
error: type mismatch: cannot pass object of type REF CHAR() as REF INV FIXED(31) by IDENT
*/


   CALL q2(ria); ! REF () INV FIXED;
/*$        ^
error: type mismatch: cannot pass object of type REF () INV FIXED(31) as REF INV FIXED(31) by IDENT
*/

   CALL q2(iria); ! INV REF () INV FIXED INIT(ia);
/*$        ^
error: type mismatch: cannot pass object of type INV REF () INV FIXED(31) as REF INV FIXED(31) by IDENT
*/
END;


q4: PROC (f INV REF FIXED(31) IDENT );
  f = f + 1;
END;

t4: TASK;
   DCL f15 FIXED(15);
   TYPE F15 FIXED(15);
   DCL tf15 F15;
   DCL f31 FIXED(31);
   DCL if31 INV FIXED(31) INIT(42);
   DCL rif31 REF INV FIXED(31);
   DCL irif31 INV REF INV FIXED(31) INIT(if31);
   DCL str STRUCT[a FIXED(31), b FIXED(15)];

   DCL ia(3) INV FIXED INIT(1,2);
   DCL ria REF () INV FIXED;
   DCL iria INV REF () INV FIXED INIT(ia);

   DCL c100 CHAR(100);
   DCL rc REF CHAR();
   
   CALL q4(15);           
/*$        ^
error: type mismatch: cannot pass constant of type FIXED(4) as INV REF FIXED(31) by IDENT
*/

   CALL q4(f15);          
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as INV REF FIXED(31) by IDENT
*/

   CALL q4(tf15);          
/*$        ^
error: type mismatch: cannot pass object of type F15 {aka: FIXED(15)} as INV REF FIXED(31) by IDENT
*/

   CALL q4(str.a);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(31) as INV REF FIXED(31) by IDENT
*/

   CALL q4(str.b);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as INV REF FIXED(31) by IDENT
*/

   CALL q4(if31);       
/*$        ^
error: type mismatch: cannot pass object of type INV FIXED(31) as INV REF FIXED(31) by IDENT
*/

   CALL q4(rif31);  
/*$        ^
error: type mismatch: cannot pass object of type REF INV FIXED(31) as INV REF FIXED(31) by IDENT -- would break INV
*/

   CALL q4(irif31); 
/*$        ^
error: type mismatch: cannot pass object of type INV REF INV FIXED(31) as INV REF FIXED(31) by IDENT -- would break INV
*/

   CALL q4(f31+1);        
/*$        ^
error: type mismatch: cannot pass expression of type FIXED(31) as INV REF FIXED(31) by IDENT
*/

   CALL q4('a');
/*$        ^
error: type mismatch: cannot pass constant of type CHAR(1) as INV REF FIXED(31) by IDENT
*/

   CALL q4(c100);
/*$        ^
error: type mismatch: cannot pass object of type CHAR(100) as INV REF FIXED(31) by IDENT
*/

   CALL q4(rc);
/*$        ^
error: type mismatch: cannot pass object of type REF CHAR() as INV REF FIXED(31) by IDENT
*/


   CALL q4(ria); ! REF () INV FIXED;
/*$        ^
error: type mismatch: cannot pass object of type REF () INV FIXED(31) as INV REF FIXED(31) by IDENT
*/

   CALL q4(iria); ! INV REF () INV FIXED INIT(ia);
/*$        ^
error: type mismatch: cannot pass object of type INV REF () INV FIXED(31) as INV REF FIXED(31) by IDENT
*/
END;

q5: PROC (f INV REF INV FIXED(31) IDENT );
  !f = f + 1;
END;

t5: TASK;
   DCL f15 FIXED(15);
   TYPE F15 FIXED(15);
   DCL tf15 F15;
   DCL f31 FIXED(31);
   DCL if31 INV FIXED(31) INIT(42);
   DCL rif31 REF INV FIXED(31);
   DCL irif31 INV REF INV FIXED(31) INIT(if31);
   DCL str STRUCT[a FIXED(31), b FIXED(15)];

   DCL ia(3) INV FIXED INIT(1,2);
   DCL ria REF () INV FIXED;
   DCL iria INV REF () INV FIXED INIT(ia);

   DCL c100 CHAR(100);
   DCL rc REF CHAR();
   
   CALL q5(15);           
/*$        ^
error: type mismatch: cannot pass constant of type FIXED(4) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(f15);          
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(tf15);          
/*$        ^
error: type mismatch: cannot pass object of type F15 {aka: FIXED(15)} as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(str.a);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(31) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(str.b);        
/*$        ^
error: type mismatch: cannot pass object of type FIXED(15) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(if31);          
/*$        ^
error: type mismatch: cannot pass object of type INV FIXED(31) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(rif31);  

   CALL q5(irif31); 

   CALL q5(f31+1);        
/*$        ^
error: type mismatch: cannot pass expression of type FIXED(31) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5('a');
/*$        ^
error: type mismatch: cannot pass constant of type CHAR(1) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(c100);
/*$        ^
error: type mismatch: cannot pass object of type CHAR(100) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(rc);
/*$        ^
error: type mismatch: cannot pass object of type REF CHAR() as INV REF INV FIXED(31) by IDENT
*/


   CALL q5(ria); ! REF () INV FIXED;
/*$        ^
error: type mismatch: cannot pass object of type REF () INV FIXED(31) as INV REF INV FIXED(31) by IDENT
*/

   CALL q5(iria); ! INV REF () INV FIXED INIT(ia);
/*$        ^
error: type mismatch: cannot pass object of type INV REF () INV FIXED(31) as INV REF INV FIXED(31) by IDENT
*/
END;

q8: PROC (x REF CHAR() IDENT);
END;

t8: TASK;
   DCL text1 CHAR(20);
   DCL text2 CHAR(100);
   DCL rc REF CHAR() INIT(text2);
   DCL irc INV REF CHAR() INIT(text2);
   DCL ric REF INV CHAR() INIT(text2);
   DCL iric INV REF INV CHAR() INIT(text2);

   q8(text1);
/*$   ^
error: type mismatch: cannot pass object of type CHAR(20) as REF CHAR() by IDENT
*/
   q8(rc);

   q8(irc);
/*$   ^
error: type mismatch: cannot pass object of type INV REF CHAR() as REF CHAR() by IDENT -- would break INV
*/
   q8(ric);
/*$   ^
error: type mismatch: cannot pass object of type REF INV CHAR() as REF CHAR() by IDENT -- would break INV
*/
   q8(iric);
/*$   ^
error: type mismatch: cannot pass object of type INV REF INV CHAR() as REF CHAR() by IDENT -- would break INV
*/

   q8('Hallo');
/*$   ^
error: type mismatch: cannot pass constant of type CHAR(5) as REF CHAR() by IDENT
*/
END;

q9: PROC (x REF INV CHAR() IDENT);
END;

t9: TASK;
   DCL text1 CHAR(20);
   DCL text2 CHAR(100);
   DCL rc REF CHAR() INIT(text2);
   DCL irc INV REF CHAR() INIT(text2);
   DCL ric REF INV CHAR() INIT(text2);
   DCL iric INV REF INV CHAR() INIT(text2);
   q9(text1);
/*$   ^
error: type mismatch: cannot pass object of type CHAR(20) as REF INV CHAR() by IDENT
*/

   q9('Hallo');
/*$   ^
error: type mismatch: cannot pass constant of type CHAR(5) as REF INV CHAR() by IDENT
*/

   q9(rc); ! ok - no modification of the content possible
   q9(irc); ! fail - would break INV of REF
/*$   ^
error: type mismatch: cannot pass object of type INV REF CHAR() as REF INV CHAR() by IDENT -- would break INV
*/

   q9(ric); ! ok - types fit
   q9(iric); ! fail would break INV of REF
/*$   ^
error: type mismatch: cannot pass object of type INV REF INV CHAR() as REF INV CHAR() by IDENT -- would break INV
*/
END;
MODEND;
