MODULE(loggingExample);

SYSTEM;
   so: StdOut;
   homeFolder: Disc('./',1);
!   Log('EW') --- so;  ! possible EWDIT

PROBLEM;
   SPC so DATION OUT SYSTEM ALPHIC;

   SPC homeFolder DATION INOUT SYSTEM ALL ;
   DCL terminal DATION OUT ALPHIC DIM(*,80) FORWARD  CREATED(so);
   DCL logFile DATION OUT ALPHIC DIM(*,80) FORWARD  CREATED(homeFolder);
   DCL fileName CHAR(20) INIT('logFile.txt');

test: TASK MAIN;
   DCL message CHAR(40);
   OPEN terminal;
   PUT 'Example for a log file with name ', fileName TO terminal 
   BY   A, A, SKIP;
   openLogfile(fileName,'1'B1);
   addMessage('application starts');

   PUT 'emit 10 log messages' TO terminal BY A, SKIP;
   FOR i TO 10 REPEAT
        AFTER i* 0.2 SEC RESUME;
        CONVERT 'i=',i TO message BY A,F(3);
        addMessage(message);
   END; 

   addMessage('application ends');
   closeLogfile;
END;

openLogfile: PROC(logFileName REF INV CHAR(), addToExistingFile BIT(1));
   DCL fn CHAR(30); ! workarround since REF CHAR() is not accepted as IDF
   fn = logFileName;! see ticket #414

   IF addToExistingFile THEN
      OPEN logFile BY IDF(fn), ANY;
      PUT TO logFile BY EOF;
   ELSE
      ! we want a new log file for each execution
      ! --> just open with ANY and close with CAN
      OPEN logFile BY IDF(fn), ANY;
      CLOSE logFile BY CAN;
      ! previous log file deleted

      ! create a new file
      OPEN logFile BY IDF(fn), NEW;
      addMessage('new log file created');
   FIN;
END;

closeLogfile: PROC;
   CLOSE logFile; 
END;

addMessage: PROC(message  REF INV CHAR() );
   PUT 'add: ', message TO terminal BY 2A, SKIP;
   PUT NOW,': ',message TO logFile BY T(12,3),A,A,SKIP;
END;

MODEND;   
 
